# Uncomment the next line to define a global platform for your project
deployment_target = '11.0'
workspace = 'daw-purchases.xcworkspace'

platform :ios, deployment_target
workspace workspace
use_frameworks!

def is_pod_binary_cache_enabled
  ENV['IS_POD_BINARY_CACHE_ENABLED'] == 'true'
end

HOME = ENV['HOME']

prebuild_path = "#{HOME}/Library/Developer/Xcode/_PreBuild"

if is_pod_binary_cache_enabled
  plugin 'cocoapods-binary-cache'

  config_cocoapods_binary_cache(
    cache_repo: {
      'default' => {
        'remote' =>
          'git@bitbucket.org:ascendcorp/ami-ios-consumer-cache.git',
        'local' => '~/.cocoapods-binary-cache/prebuilt-frameworks'
      }
    },
    prebuild_config: 'Debug',
    device_build_enabled: true,
    xcframework: true,
    bitcode_enabled: true,
    dev_pods_enabled: true,
    disable_dsym: true,
    prebuild_sandbox_path: prebuild_path
  )
end

def binary_pod(name, *args)
  if is_pod_binary_cache_enabled
    pod name, args, binary: true
  else
    pod name, args
  end
end

def netFox
  swift_netfox_version = '1.19.0'

  if is_pod_binary_cache_enabled
    pod 'netfox',
        swift_netfox_version,
        configurations: ['Debug'],
        binary: true
  else
    pod 'netfox', swift_netfox_version, configurations: ['Debug']
  end
end

def module_binary_pod(name)
  if is_pod_binary_cache_enabled
    pod name, path: name, binary: true
  else
    pod name, path: name
  end
end

def google_utilites
  google_utilities_version = '7.5.0'
  gtm_session_fetcher_version = '1.6.1'

  binary_pod 'GoogleUtilities', google_utilities_version
  binary_pod 'GTMSessionFetcher', gtm_session_fetcher_version
end

def rxSwift
  rx_version = '~> 5.1.1'

  binary_pod 'RxSwift', rx_version
  binary_pod 'RxCocoa', rx_version
  binary_pod 'RxRelay'
  binary_pod 'RxDataSources'
end

def swiftInject
  swinject_version = '~> 2.7.0'

  binary_pod 'Swinject', swinject_version
  binary_pod 'SwinjectAutoregistration', swinject_version
end

def coreList
  binary_pod 'CoreList', "0.0.3"
end

def networking
  moya_version = '14.0.0'
  moya_sugar_version = '~> 1.3.3'

  rxSwift
  data
  binary_pod 'Moya', moya_version
  binary_pod 'Moya/RxSwift', moya_version
  binary_pod 'MoyaSugar', moya_sugar_version

end

def logging
  binary_pod 'JustLog'
end


def data
  object_mapper_version = '4.2.0'
  result_version = '~> 5.0.0'
  keychain_access_version = '~> 4.2.1'
  
  binary_pod 'ObjectMapper', object_mapper_version
  binary_pod 'Result', result_version
  binary_pod 'KeychainAccess', keychain_access_version
end


def utility
  r_swift_version = '5.2.2'
  binary_pod 'R.swift', r_swift_version
  binary_pod 'Natrium'
end


def ui
  iq_keyboard_manager_swift_version = '6.5.6'
  binary_pod 'IQKeyboardManagerSwift', iq_keyboard_manager_swift_version
  binary_pod 'MaterialComponents'
  binary_pod 'Material'
  binary_pod 'RBBAnimation'
  binary_pod 'SnapKit'
end

def realm
  binary_pod 'RxRealm'
  binary_pod 'RealmSwift'
  binary_pod 'Realm'
end


def redux
  binary_pod 'ReSwift', '5.0.0'
  binary_pod 'ReSwiftRouter', '~>0.7.1'
  binary_pod 'ReRxSwift', '2.2.2'
end

def shared_pods
  # Social
#  pod 'TwitterKit'
  redux
  rxSwift
  ui
  networking
  data
  utility
  logging
  realm
  netFox
  swiftInject
  coreList
  
  pod 'QueryKit'
  pod 'Alamofire'
  pod 'RxAlamofire'
end


target 'daw-purchases' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for daw-purchases
  shared_pods


  target 'daw-purchasesTests' do
    inherit! :search_paths
    # Pods for testing
    pod 'RxBlocking', '5.1.1'
    pod 'RxTest', '5.1.1'
  end

  target 'daw-purchasesUITests' do
    # Pods for testing
  end

end




post_install do |installer|
  installer.generated_projects.each do |project|
    project.build_configurations.each do |config|
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] =
        deployment_target
    end
  end

  installer
    .pods_project
    .targets
    .each do |target|
      target.build_configurations.each do |config|
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] =
          deployment_target
      end
    end
end
